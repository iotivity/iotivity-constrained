{
  "comments": [
    {
      "key": {
        "uuid": "da33351e_cd084c30",
        "filename": "api/oc_buffer.c",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 21
      },
      "writtenOn": "2018-04-01T20:55:27Z",
      "side": 1,
      "message": "Can get rid of this after the suggested change to oc_connectivity.h.",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 93,
        "endChar": 19
      },
      "revId": "2037135c4d87e033f13b821498d339ea6cffd7d7",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_ed0b9029",
        "filename": "api/oc_client_api.c",
        "patchSetId": 2
      },
      "lineNbr": 295,
      "author": {
        "id": 21
      },
      "writtenOn": "2018-04-01T20:55:27Z",
      "side": 1,
      "message": "Can revert back this change.",
      "range": {
        "startLine": 288,
        "startChar": 0,
        "endLine": 295,
        "endChar": 3
      },
      "revId": "2037135c4d87e033f13b821498d339ea6cffd7d7",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_8d176451",
        "filename": "api/oc_ri.c",
        "patchSetId": 2
      },
      "lineNbr": 1212,
      "author": {
        "id": 21
      },
      "writtenOn": "2018-04-01T20:55:27Z",
      "side": 1,
      "message": "You could revert back this change. Setting mid to something here is inconsequential.",
      "range": {
        "startLine": 1205,
        "startChar": 0,
        "endLine": 1212,
        "endChar": 3
      },
      "revId": "2037135c4d87e033f13b821498d339ea6cffd7d7",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_ad122860",
        "filename": "api/oc_server_api.c",
        "patchSetId": 2
      },
      "lineNbr": 359,
      "author": {
        "id": 21
      },
      "writtenOn": "2018-04-01T20:55:27Z",
      "side": 1,
      "message": "You could revert back this change.",
      "range": {
        "startLine": 351,
        "startChar": 0,
        "endLine": 359,
        "endChar": 50
      },
      "revId": "2037135c4d87e033f13b821498d339ea6cffd7d7",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_4d1d5c73",
        "filename": "include/oc_buffer.h",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 21
      },
      "writtenOn": "2018-04-01T20:55:27Z",
      "side": 1,
      "message": "Can get rid of this following other changes.",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 28,
        "endChar": 19
      },
      "revId": "2037135c4d87e033f13b821498d339ea6cffd7d7",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_2d2f38a3",
        "filename": "messaging/coap/coap.c",
        "patchSetId": 2
      },
      "lineNbr": 380,
      "author": {
        "id": 21
      },
      "writtenOn": "2018-04-01T20:55:27Z",
      "side": 1,
      "message": "You could get rid of this #ifdef once transport_type is made a standard field.",
      "range": {
        "startLine": 380,
        "startChar": 0,
        "endLine": 380,
        "endChar": 13
      },
      "revId": "2037135c4d87e033f13b821498d339ea6cffd7d7",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_cd216cb6",
        "filename": "messaging/coap/coap.c",
        "patchSetId": 2
      },
      "lineNbr": 862,
      "author": {
        "id": 21
      },
      "writtenOn": "2018-04-01T20:55:27Z",
      "side": 1,
      "message": "You could remove this #ifdef once this is made a standard field.",
      "range": {
        "startLine": 862,
        "startChar": 0,
        "endLine": 862,
        "endChar": 13
      },
      "revId": "2037135c4d87e033f13b821498d339ea6cffd7d7",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_6d182085",
        "filename": "messaging/coap/coap.h",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 21
      },
      "writtenOn": "2018-04-01T20:55:27Z",
      "side": 1,
      "message": "You could make this a standard field of the struct by taking out the #ifdef.",
      "range": {
        "startLine": 98,
        "startChar": 0,
        "endLine": 98,
        "endChar": 13
      },
      "revId": "2037135c4d87e033f13b821498d339ea6cffd7d7",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_0d2cf4aa",
        "filename": "messaging/coap/coap.h",
        "patchSetId": 2
      },
      "lineNbr": 152,
      "author": {
        "id": 21
      },
      "writtenOn": "2018-04-01T20:55:27Z",
      "side": 1,
      "message": "You could instead just set default size of payload_len to uint32_t and get rid of the #ifdef.",
      "range": {
        "startLine": 148,
        "startChar": 0,
        "endLine": 152,
        "endChar": 20
      },
      "revId": "2037135c4d87e033f13b821498d339ea6cffd7d7",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_ad44e874",
        "filename": "messaging/coap/engine.c",
        "patchSetId": 2
      },
      "lineNbr": 288,
      "author": {
        "id": 21
      },
      "writtenOn": "2018-04-01T20:55:27Z",
      "side": 1,
      "message": "I understand that your goal is to bypass block-wise transfers for TCP connections. But it shouldn\u0027t require this code. In the absence of block options, the code path would fall back to the else block starting at line 433 in this file, which should accept an incoming block of any size (\u003c\u003d OC_MAX_APP_DATA_SIZE) for PUT/POST and process the request.",
      "range": {
        "startLine": 252,
        "startChar": 0,
        "endLine": 288,
        "endChar": 19
      },
      "revId": "2037135c4d87e033f13b821498d339ea6cffd7d7",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_4d4f1c93",
        "filename": "messaging/coap/engine.c",
        "patchSetId": 2
      },
      "lineNbr": 473,
      "author": {
        "id": 21
      },
      "writtenOn": "2018-04-01T20:55:27Z",
      "side": 1,
      "message": "Can get rid of this.",
      "range": {
        "startLine": 471,
        "startChar": 0,
        "endLine": 473,
        "endChar": 19
      },
      "revId": "2037135c4d87e033f13b821498d339ea6cffd7d7",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_8d49248e",
        "filename": "messaging/coap/engine.c",
        "patchSetId": 2
      },
      "lineNbr": 498,
      "author": {
        "id": 21
      },
      "writtenOn": "2018-04-01T20:55:27Z",
      "side": 1,
      "message": "You can instead use:\n  if (msg-\u003eendpoint.flags \u0026 TCP) {\n          const void *payload \u003d oc_blockwise_dispatch_block(\n            response_buffer, 0, response_buffer-\u003epayload_size + 1, \u0026payload_size);\n          if (payload) {\n            coap_set_payload(response, payload, payload_size);\n          }\n  else {\n  ..\n\nThis way if we want to support block-wise transfers via the BERT option in the future, this would be one of the places we modify.",
      "range": {
        "startLine": 493,
        "startChar": 0,
        "endLine": 498,
        "endChar": 18
      },
      "revId": "2037135c4d87e033f13b821498d339ea6cffd7d7",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_cd732ce6",
        "filename": "messaging/coap/engine.c",
        "patchSetId": 2
      },
      "lineNbr": 561,
      "author": {
        "id": 21
      },
      "writtenOn": "2018-04-01T20:55:27Z",
      "side": 1,
      "message": "In the absence of block-wise transfers, a client shouldn\u0027t have an active request_buffer and execution would move to line 624. So, you could get rid of this. The idea is to reuse common code paths wherever possible, so that if we ever want to support block-wise transfers, it wouldn\u0027t require further changes here.",
      "range": {
        "startLine": 559,
        "startChar": 0,
        "endLine": 561,
        "endChar": 19
      },
      "revId": "2037135c4d87e033f13b821498d339ea6cffd7d7",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_2d81f88f",
        "filename": "messaging/coap/engine.c",
        "patchSetId": 2
      },
      "lineNbr": 623,
      "author": {
        "id": 21
      },
      "writtenOn": "2018-04-01T20:55:27Z",
      "side": 1,
      "message": "Can get rid of this.",
      "range": {
        "startLine": 622,
        "startChar": 0,
        "endLine": 623,
        "endChar": 7
      },
      "revId": "2037135c4d87e033f13b821498d339ea6cffd7d7",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_0d7eb4ae",
        "filename": "messaging/coap/engine.c",
        "patchSetId": 2
      },
      "lineNbr": 652,
      "author": {
        "id": 21
      },
      "writtenOn": "2018-04-01T20:55:27Z",
      "side": 1,
      "message": "Can get rid of this block. The block below should do the job. If the response has no block2 option, the condition on line 686 would be false and execution would continue as desired.",
      "range": {
        "startLine": 625,
        "startChar": 0,
        "endLine": 652,
        "endChar": 19
      },
      "revId": "2037135c4d87e033f13b821498d339ea6cffd7d7",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_6d4ae084",
        "filename": "messaging/coap/engine.c",
        "patchSetId": 2
      },
      "lineNbr": 708,
      "author": {
        "id": 21
      },
      "writtenOn": "2018-04-01T20:55:27Z",
      "side": 1,
      "message": "Can get rid of this.",
      "range": {
        "startLine": 706,
        "startChar": 0,
        "endLine": 708,
        "endChar": 19
      },
      "revId": "2037135c4d87e033f13b821498d339ea6cffd7d7",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_8d400458",
        "filename": "messaging/coap/observe.c",
        "patchSetId": 2
      },
      "lineNbr": 392,
      "author": {
        "id": 21
      },
      "writtenOn": "2018-04-01T20:55:27Z",
      "side": 1,
      "message": "This should be:\nif (obs-\u003eobs_counter % COAP_OBSERVE_REFRESH_INTERVAL \u003d\u003d 0 \u0026\u0026 \n    obs-\u003eendpoint.flags \u0026 ~TCP)",
      "range": {
        "startLine": 392,
        "startChar": 10,
        "endLine": 392,
        "endChar": 68
      },
      "revId": "2037135c4d87e033f13b821498d339ea6cffd7d7",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_ed2430c8",
        "filename": "messaging/coap/observe.c",
        "patchSetId": 2
      },
      "lineNbr": 421,
      "author": {
        "id": 21
      },
      "writtenOn": "2018-04-01T20:55:27Z",
      "side": 1,
      "message": "You can revert this change. It doesn\u0027t matter if \"mid\" is set to some non-zero value in any structures because it is never encoded.",
      "range": {
        "startLine": 416,
        "startChar": 0,
        "endLine": 421,
        "endChar": 64
      },
      "revId": "2037135c4d87e033f13b821498d339ea6cffd7d7",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_ad3b48ea",
        "filename": "messaging/coap/transactions.c",
        "patchSetId": 2
      },
      "lineNbr": 94,
      "author": {
        "id": 21
      },
      "writtenOn": "2018-04-01T20:55:27Z",
      "side": 1,
      "message": "Could revert back this change after the suggested changes to oc_connectivity.h and oc_buffer.c.",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 94,
        "endChar": 5
      },
      "revId": "2037135c4d87e033f13b821498d339ea6cffd7d7",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_cd5a0c50",
        "filename": "port/oc_connectivity.h",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 21
      },
      "writtenOn": "2018-04-01T20:55:27Z",
      "side": 1,
      "message": "Use #ifdef OC_TCP ... #else ... here to set OC_PDU_SIZE.",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 63,
        "endChar": 2
      },
      "revId": "2037135c4d87e033f13b821498d339ea6cffd7d7",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_cdd7acbe",
        "filename": "port/oc_connectivity.h",
        "patchSetId": 2
      },
      "lineNbr": 65,
      "author": {
        "id": 21
      },
      "writtenOn": "2018-04-01T20:55:27Z",
      "side": 1,
      "message": "I understand that you want a \"full-size\" buffer in oc_message_t for an OC_TCP build, especially since you want to suppress block-wise transfers (at least, for now) over TCP. I think that is reasonable. But at the moment, it seems preferable to adjust OC_PDU_SIZE to (OC_MAX_APP_DATA_SIZE + COAP_MAX_HEADER_SIZE) inside an #ifdef OC_TCP",
      "range": {
        "startLine": 65,
        "startChar": 8,
        "endLine": 65,
        "endChar": 26
      },
      "revId": "2037135c4d87e033f13b821498d339ea6cffd7d7",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_2d58d855",
        "filename": "port/oc_connectivity.h",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 21
      },
      "writtenOn": "2018-04-01T20:55:27Z",
      "side": 1,
      "message": "Ditto as above.",
      "range": {
        "startLine": 68,
        "startChar": 8,
        "endLine": 68,
        "endChar": 19
      },
      "revId": "2037135c4d87e033f13b821498d339ea6cffd7d7",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_0d55141d",
        "filename": "port/oc_connectivity.h",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 21
      },
      "writtenOn": "2018-04-01T20:55:27Z",
      "side": 1,
      "message": "Can get rid of this.",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 71,
        "endChar": 78
      },
      "revId": "2037135c4d87e033f13b821498d339ea6cffd7d7",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_6d31400b",
        "filename": "port/oc_connectivity.h",
        "patchSetId": 2
      },
      "lineNbr": 140,
      "author": {
        "id": 21
      },
      "writtenOn": "2018-04-01T20:55:27Z",
      "side": 1,
      "message": "Following the suggested changes above, you could revert back this change.",
      "range": {
        "startLine": 136,
        "startChar": 0,
        "endLine": 140,
        "endChar": 20
      },
      "revId": "2037135c4d87e033f13b821498d339ea6cffd7d7",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_ed5d504a",
        "filename": "security/oc_dtls.c",
        "patchSetId": 2
      },
      "lineNbr": 812,
      "author": {
        "id": 21
      },
      "writtenOn": "2018-04-01T20:55:27Z",
      "side": 1,
      "message": "Following suggested changes to oc_connectivity.h and oc_buffer.c, you could revert back this code change.",
      "range": {
        "startLine": 807,
        "startChar": 0,
        "endLine": 812,
        "endChar": 5
      },
      "revId": "2037135c4d87e033f13b821498d339ea6cffd7d7",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    }
  ]
}