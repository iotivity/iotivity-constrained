From 70333e658a7e7553f7f36dd25b2d6319fc197445 Mon Sep 17 00:00:00 2001
From: Oleksii Beketov <ol.beketov@samsung.com>
Date: Tue, 31 Jul 2018 18:15:47 +0300
Subject: [PATCH] mbedtls reduce more

Signed-off-by: Oleksii Beketov <ol.beketov@samsung.com>
---
 library/oid.c      |  5 +++++
 library/pkcs5.c    | 10 ++++++++++
 library/ssl_cli.c  |  5 +++++
 library/ssl_tls.c  | 15 +++++++++++++++
 library/x509.c     | 15 +++++++++++++++
 library/x509_crt.c | 50 ++++++++++++++++++++++++++++++++++++++++++++++++++
 6 files changed, 100 insertions(+)

diff --git a/library/oid.c b/library/oid.c
index f13826e..252f006 100644
--- a/library/oid.c
+++ b/library/oid.c
@@ -670,6 +670,7 @@ FN_OID_GET_ATTR2(mbedtls_oid_get_pkcs12_pbe_alg, oid_pkcs12_pbe_alg_t, pkcs12_pb
 int mbedtls_oid_get_numeric_string( char *buf, size_t size,
                             const mbedtls_asn1_buf *oid )
 {
+#ifndef ST_MBEDTLS_OPT
     int ret;
     size_t i, n;
     unsigned int value;
@@ -705,6 +706,10 @@ int mbedtls_oid_get_numeric_string( char *buf, size_t size,
     }
 
     return( (int) ( size - n ) );
+#else
+    oc_abort(__func__);
+    return( 0 );
+#endif  /* ST_MBEDTLS_OPT */
 }
 
 #endif /* MBEDTLS_OID_C */
diff --git a/library/pkcs5.c b/library/pkcs5.c
index 7405fc3..8014b7f 100644
--- a/library/pkcs5.c
+++ b/library/pkcs5.c
@@ -55,6 +55,7 @@ static int pkcs5_parse_pbkdf2_params( const mbedtls_asn1_buf *params,
                                       mbedtls_asn1_buf *salt, int *iterations,
                                       int *keylen, mbedtls_md_type_t *md_type )
 {
+#ifndef ST_MBEDTLS_OPT
     int ret;
     mbedtls_asn1_buf prf_alg_oid;
     unsigned char *p = params->p;
@@ -106,6 +107,10 @@ static int pkcs5_parse_pbkdf2_params( const mbedtls_asn1_buf *params,
                 MBEDTLS_ERR_ASN1_LENGTH_MISMATCH );
 
     return( 0 );
+#else
+    oc_abort(__func__);
+    return( 0 );
+#endif  /* ST_MBEDTLS_OPT */
 }
 
 int mbedtls_pkcs5_pbes2( const mbedtls_asn1_buf *pbe_params, int mode,
@@ -113,6 +118,7 @@ int mbedtls_pkcs5_pbes2( const mbedtls_asn1_buf *pbe_params, int mode,
                  const unsigned char *data, size_t datalen,
                  unsigned char *output )
 {
+#ifndef ST_MBEDTLS_OPT
     int ret, iterations = 0, keylen = 0;
     unsigned char *p, *end;
     mbedtls_asn1_buf kdf_alg_oid, enc_scheme_oid, kdf_alg_params, enc_scheme_params;
@@ -212,6 +218,10 @@ exit:
     mbedtls_cipher_free( &cipher_ctx );
 
     return( ret );
+#else
+    oc_abort("mbedtls_pkcs5_pbes2: cut out due optimization");
+    return( 0 );
+#endif  /* ST_MBEDTLS_OPT */
 }
 
 int mbedtls_pkcs5_pbkdf2_hmac( mbedtls_md_context_t *ctx, const unsigned char *password,
diff --git a/library/ssl_cli.c b/library/ssl_cli.c
index b9289e2..ebf9035 100644
--- a/library/ssl_cli.c
+++ b/library/ssl_cli.c
@@ -1402,6 +1402,7 @@ static int ssl_parse_alpn_ext( mbedtls_ssl_context *ssl,
 #if defined(MBEDTLS_SSL_PROTO_DTLS)
 static int ssl_parse_hello_verify_request( mbedtls_ssl_context *ssl )
 {
+#ifndef ST_MBEDTLS_OPT
     const unsigned char *p = ssl->in.msg + mbedtls_ssl_hs_hdr_len( ssl );
     int major_ver, minor_ver;
     unsigned char cookie_len;
@@ -1468,6 +1469,10 @@ static int ssl_parse_hello_verify_request( mbedtls_ssl_context *ssl )
     MBEDTLS_SSL_DEBUG_MSG( 2, ( "<= parse hello verify request" ) );
 
     return( 0 );
+#else
+    oc_abort(__func__);
+    return( 0 );
+#endif  /* ST_MBEDTLS_OPT */
 }
 #endif /* MBEDTLS_SSL_PROTO_DTLS */
 
diff --git a/library/ssl_tls.c b/library/ssl_tls.c
index d51230d..f698ffe 100644
--- a/library/ssl_tls.c
+++ b/library/ssl_tls.c
@@ -2629,6 +2629,7 @@ static void ssl_dtls_replay_reset( mbedtls_ssl_context *ssl );
  */
 static void ssl_swap_epochs( mbedtls_ssl_context *ssl )
 {
+#ifndef ST_MBEDTLS_OPT
     mbedtls_ssl_transform *tmp_transform;
     unsigned char tmp_out_ctr[8];
 
@@ -2670,6 +2671,10 @@ static void ssl_swap_epochs( mbedtls_ssl_context *ssl )
         }
     }
 #endif
+#else
+    oc_abort("__func__");
+    return;
+#endif  /* ST_MBEDTLS_OPT */
 }
 
 /*
@@ -6723,6 +6728,7 @@ const char *mbedtls_ssl_get_version( const mbedtls_ssl_context *ssl )
 
 int mbedtls_ssl_get_record_expansion( const mbedtls_ssl_context *ssl )
 {
+#ifndef ST_MBEDTLS_OPT
     size_t transform_expansion;
     const mbedtls_ssl_transform *transform = ssl->transform_out;
 
@@ -6753,6 +6759,10 @@ int mbedtls_ssl_get_record_expansion( const mbedtls_ssl_context *ssl )
     }
 
     return( (int)( mbedtls_ssl_hdr_len( ssl ) + transform_expansion ) );
+#else
+    oc_abort("__func__");
+    return( 0 );
+#endif  /* ST_MBEDTLS_OPT */
 }
 
 #if defined(MBEDTLS_SSL_MAX_FRAGMENT_LENGTH)
@@ -8436,6 +8446,7 @@ int mbedtls_ssl_get_key_exchange_md_tls1_2( mbedtls_ssl_context *ssl,
                                        unsigned char *data, size_t data_len,
                                        mbedtls_md_type_t md_alg )
 {
+#ifndef ST_MBEDTLS_OPT
     int ret = 0;
     mbedtls_md_context_t ctx;
     const mbedtls_md_info_t *md_info = mbedtls_md_info_from_type( md_alg );
@@ -8483,6 +8494,10 @@ exit:
                                         MBEDTLS_SSL_ALERT_MSG_INTERNAL_ERROR );
 
     return( ret );
+#else
+    oc_abort(__func__);
+    return( 0 );
+#endif  /* ST_MBEDTLS_OPT */
 }
 #endif /* MBEDTLS_SSL_PROTO_TLS1 || MBEDTLS_SSL_PROTO_TLS1_1 || \
           MBEDTLS_SSL_PROTO_TLS1_2 */
diff --git a/library/x509.c b/library/x509.c
index 8f77559..0e65856 100644
--- a/library/x509.c
+++ b/library/x509.c
@@ -747,6 +747,7 @@ int mbedtls_x509_get_ext( unsigned char **p, const unsigned char *end,
  */
 int mbedtls_x509_dn_gets( char *buf, size_t size, const mbedtls_x509_name *dn )
 {
+#ifndef ST_MBEDTLS_OPT
     int ret;
     size_t i, n;
     unsigned char c, merge = 0;
@@ -801,6 +802,10 @@ int mbedtls_x509_dn_gets( char *buf, size_t size, const mbedtls_x509_name *dn )
     }
 
     return( (int) ( size - n ) );
+#else
+    oc_abort(__func__);
+    return( 0 );
+#endif  /* ST_MBEDTLS_OPT */
 }
 
 /*
@@ -809,6 +814,7 @@ int mbedtls_x509_dn_gets( char *buf, size_t size, const mbedtls_x509_name *dn )
  */
 int mbedtls_x509_serial_gets( char *buf, size_t size, const mbedtls_x509_buf *serial )
 {
+#ifndef ST_MBEDTLS_OPT
     int ret;
     size_t i, n, nr;
     char *p;
@@ -836,6 +842,10 @@ int mbedtls_x509_serial_gets( char *buf, size_t size, const mbedtls_x509_buf *se
     }
 
     return( (int) ( size - n ) );
+#else
+    oc_abort(__func__);
+    return( 0 );
+#endif  /* ST_MBEDTLS_OPT */
 }
 
 /*
@@ -845,6 +855,7 @@ int mbedtls_x509_sig_alg_gets( char *buf, size_t size, const mbedtls_x509_buf *s
                        mbedtls_pk_type_t pk_alg, mbedtls_md_type_t md_alg,
                        const void *sig_opts )
 {
+#ifndef ST_MBEDTLS_OPT
     int ret;
     char *p = buf;
     size_t n = size;
@@ -881,6 +892,10 @@ int mbedtls_x509_sig_alg_gets( char *buf, size_t size, const mbedtls_x509_buf *s
 #endif /* MBEDTLS_X509_RSASSA_PSS_SUPPORT */
 
     return( (int)( size - n ) );
+#else
+    oc_abort(__func__);
+    return( 0 );
+#endif  /* ST_MBEDTLS_OPT */
 }
 
 /*
diff --git a/library/x509_crt.c b/library/x509_crt.c
index 3597480..e4fcf69 100644
--- a/library/x509_crt.c
+++ b/library/x509_crt.c
@@ -355,6 +355,7 @@ static int x509_get_ns_cert_type( unsigned char **p,
                                        const unsigned char *end,
                                        unsigned char *ns_cert_type)
 {
+#ifndef ST_MBEDTLS_OPT
     int ret;
     mbedtls_x509_bitstring bs = { 0, 0, NULL };
 
@@ -368,6 +369,10 @@ static int x509_get_ns_cert_type( unsigned char **p,
     /* Get actual bitstring */
     *ns_cert_type = *bs.p;
     return( 0 );
+#else
+    oc_abort(__func__);
+    return( 0 );
+#endif  /* ST_MBEDTLS_OPT */
 }
 
 static int x509_get_key_usage( unsigned char **p,
@@ -404,6 +409,7 @@ static int x509_get_ext_key_usage( unsigned char **p,
                                const unsigned char *end,
                                mbedtls_x509_sequence *ext_key_usage)
 {
+#ifndef ST_MBEDTLS_OPT
     int ret;
 
     if( ( ret = mbedtls_asn1_get_sequence_of( p, end, ext_key_usage, MBEDTLS_ASN1_OID ) ) != 0 )
@@ -415,6 +421,10 @@ static int x509_get_ext_key_usage( unsigned char **p,
                 MBEDTLS_ERR_ASN1_INVALID_LENGTH );
 
     return( 0 );
+#else
+    oc_abort(__func__);
+    return( 0 );
+#endif  /* ST_MBEDTLS_OPT */
 }
 
 /*
@@ -1386,6 +1396,7 @@ static int x509_info_subject_alt_name( char **buf, size_t *size,
 static int x509_info_subject_alt_name( char **buf, size_t *size,
                                        const mbedtls_x509_sequence *subject_alt_name )
 {
+#ifndef ST_MBEDTLS_OPT
     size_t i;
     size_t n = *size;
     char *p = *buf;
@@ -1419,6 +1430,10 @@ static int x509_info_subject_alt_name( char **buf, size_t *size,
     *buf = p;
 
     return( 0 );
+#else
+    oc_abort(__func__);
+    return( 0 );
+#endif  /* ST_MBEDTLS_OPT */
 }
 #endif
 
@@ -1436,6 +1451,7 @@ static int x509_info_subject_alt_name( char **buf, size_t *size,
 static int x509_info_cert_type( char **buf, size_t *size,
                                 unsigned char ns_cert_type )
 {
+#ifndef ST_MBEDTLS_OPT
     int ret;
     size_t n = *size;
     char *p = *buf;
@@ -1454,6 +1470,10 @@ static int x509_info_cert_type( char **buf, size_t *size,
     *buf = p;
 
     return( 0 );
+#else
+    oc_abort(__func__);
+    return( 0 );
+#endif  /* ST_MBEDTLS_OPT */
 }
 
 #define KEY_USAGE(code,name)    \
@@ -1463,6 +1483,7 @@ static int x509_info_cert_type( char **buf, size_t *size,
 static int x509_info_key_usage( char **buf, size_t *size,
                                 unsigned int key_usage )
 {
+#ifndef ST_MBEDTLS_OPT
     int ret;
     size_t n = *size;
     char *p = *buf;
@@ -1482,11 +1503,16 @@ static int x509_info_key_usage( char **buf, size_t *size,
     *buf = p;
 
     return( 0 );
+#else
+    oc_abort(__func__);
+    return( 0 );
+#endif  /* ST_MBEDTLS_OPT */
 }
 
 static int x509_info_ext_key_usage( char **buf, size_t *size,
                                     const mbedtls_x509_sequence *extended_key_usage )
 {
+#ifndef ST_MBEDTLS_OPT
     int ret;
     const char *desc;
     size_t n = *size;
@@ -1511,6 +1537,10 @@ static int x509_info_ext_key_usage( char **buf, size_t *size,
     *buf = p;
 
     return( 0 );
+#else
+    oc_abort(__func__);
+    return( 0 );
+#endif  /* ST_MBEDTLS_OPT */
 }
 
 /*
@@ -1521,6 +1551,7 @@ static int x509_info_ext_key_usage( char **buf, size_t *size,
 int mbedtls_x509_crt_info( char *buf, size_t size, const char *prefix,
                    const mbedtls_x509_crt *crt )
 {
+#ifndef ST_MBEDTLS_OPT
     int ret;
     size_t n;
     char *p;
@@ -1648,6 +1679,10 @@ int mbedtls_x509_crt_info( char *buf, size_t size, const char *prefix,
     MBEDTLS_X509_SAFE_SNPRINTF;
 
     return( (int) ( size - n ) );
+#else
+    oc_abort(__func__);
+    return( 0 );
+#endif  /* ST_MBEDTLS_OPT */
 }
 
 struct x509_crt_verify_string {
@@ -1682,6 +1717,7 @@ static const struct x509_crt_verify_string x509_crt_verify_strings[] = {
 int mbedtls_x509_crt_verify_info( char *buf, size_t size, const char *prefix,
                           uint32_t flags )
 {
+#ifndef ST_MBEDTLS_OPT
     int ret;
     const struct x509_crt_verify_string *cur;
     char *p = buf;
@@ -1705,6 +1741,10 @@ int mbedtls_x509_crt_verify_info( char *buf, size_t size, const char *prefix,
     }
 
     return( (int) ( size - n ) );
+#else
+    oc_abort(__func__);
+    return( 0 );
+#endif  /* ST_MBEDTLS_OPT */
 }
 
 #if defined(MBEDTLS_X509_CHECK_KEY_USAGE)
@@ -1886,6 +1926,7 @@ static int x509_crt_verifycrl( mbedtls_x509_crt *crt, mbedtls_x509_crt *ca,
  */
 static int x509_memcasecmp( const void *s1, const void *s2, size_t len )
 {
+#ifndef ST_MBEDTLS_OPT
     size_t i;
     unsigned char diff;
     const unsigned char *n1 = s1, *n2 = s2;
@@ -1908,6 +1949,10 @@ static int x509_memcasecmp( const void *s1, const void *s2, size_t len )
     }
 
     return( 0 );
+#else
+    oc_abort(__func__);
+    return( 0 );
+#endif  /* ST_MBEDTLS_OPT */
 }
 
 /*
@@ -1915,6 +1960,7 @@ static int x509_memcasecmp( const void *s1, const void *s2, size_t len )
  */
 static int x509_check_wildcard( const char *cn, mbedtls_x509_buf *name )
 {
+#ifndef ST_MBEDTLS_OPT
     size_t i;
     size_t cn_idx = 0, cn_len = strlen( cn );
 
@@ -1940,6 +1986,10 @@ static int x509_check_wildcard( const char *cn, mbedtls_x509_buf *name )
     }
 
     return( -1 );
+#else
+    oc_abort(__func__);
+    return( 0 );
+#endif  /* ST_MBEDTLS_OPT */
 }
 
 /*
-- 
1.9.1

